// GEOMETRY GEE içinde seçilecek
//mencari image
var hasil = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
 .filterBounds(geometry)
 .filterDate('2019-01-01','2019-12-31')
 .filterMetadata('CLOUD_COVER', 'less_than', 30);
Map.addLayer(hasil);
print(hasil);



//vis params
var vizParams = {
bands: ['B5', 'B6', 'B4'],
min: 0,
max: 4000,
gamma: [1, 0.9, 1.1]
};

var vizParams2 = {
bands: ['B4', 'B3', 'B2'],
min: 0,
max: 3000,
gamma: 1.4,
};


//load landsat 8 sr image
{
var image = ee.Image('LANDSAT/LC08/C01/T1_SR/LC08_180032_20191019');
print(image, 'image');
Map.addLayer(image, vizParams2);
}


//median (ndvi) 
{
var ndvi = image.normalizedDifference(['B5', 
'B4']).rename('NDVI');
var ndviParams = {min: -1, max: 1, palette: ['blue', 'white', 
'green']};
print(ndvi,'ndvi');
Map.addLayer(ndvi, ndviParams, 'ndvi');
}

//select thermal band 10(with brightness tempereature), no calculation 
var thermal= image.select('B10').multiply(0.1);
var b10Params = {min: 291.918, max: 302.382, palette: ['blue', 
'white', 'green']};
Map.addLayer(thermal, b10Params, 'thermal');

// find the min and max of NDVI
{
var min = ee.Number(ndvi.reduceRegion({
reducer: ee.Reducer.min(),

scale: 30,
maxPixels: 1e9
}).values().get(0));
print(min, 'min');

var max = ee.Number(ndvi.reduceRegion({
reducer: ee.Reducer.max(),

scale: 30,
maxPixels: 1e9
}).values().get(0));
print(max, 'max')
}

//fractional vegetation
{
var fv =(ndvi.subtract(min).divide(max.subtract(min))).pow(ee.Number(2)).rename('FV'); 
print(fv, 'fv');
Map.addLayer(fv);
}

//Emissivity

var a= ee.Number(0.004);
var b= ee.Number(0.986);
var EM=fv.multiply(a).add(b).rename('EMM');
var imageVisParam3 = {min: 0.9865619146722164, max:0.989699971371314};
Map.addLayer(EM, imageVisParam3,'EMM');

//LST in Celsius Degree bring -273.15
//NB: In Kelvin don't bring -273.15
var LST = thermal.expression(
'(Tb/(1 + (0.00115* (Tb / 1.438))*log(Ep)))-273.15', {
 'Tb': thermal.select('B10'),
'Ep': EM.select('EMM')
}).rename('LST');

//min max LST
{
var min = ee.Number(LST.reduceRegion({
reducer: ee.Reducer.min(),

scale: 30,
maxPixels: 1e9
}).values().get(0));
print(min, 'minLST');

var max = ee.Number(LST.reduceRegion({
reducer: ee.Reducer.max(),

scale: 30,
maxPixels: 1e9
}).values().get(0));
print(max, 'maxLST')
}

Map.addLayer(LST, {min: 0, max:43, palette: [
'040274', '040281', '0502a3', '0502b8', '0502ce', '0502e6',
'0602ff', '235cb1', '307ef3', '269db1', '30c8e2', '32d3ef',
'3be285', '3ff38f', '86e26f', '3ae237', 'b5e22e', 'd6e21f',
'fff705', 'ffd611', 'ffb613', 'ff8b13', 'ff6e08', 'ff500d',
'ff0000', 'de0101', 'c21301', 'a71001', '911003'
 ]},'LST');
 
 Export.image.toDrive({
  image: LST,
  description: 'LST_19Oct2019',
  folder: "image EE",
  scale: 30,
  region: image,
  fileFormat: 'GeoTIFF',
  formatOptions: {
    cloudOptimized: true
  }
});
 
  Export.image.toDrive({
  image: ndvi,
  description: 'NDVI_19Oct2019',
  folder: "image EE",
  scale: 30,
  region: image,
  fileFormat: 'GeoTIFF',
  formatOptions: {
    cloudOptimized: true
  }
});
